plugins {
  id 'java'
  id 'java-library'
  id 'maven-publish'
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
  useJUnitPlatform()
}

sourceSets {
  main {
    resources {
      srcDirs "src/main/resources", "build/natives/lib"
    }
  }
}

task generateJniHeaders(type: Exec) {
  dependsOn compileJava
  def outputDir = file("src/main/include")
  doFirst {
      outputDir.mkdirs()
  }
  commandLine 'javac', '-h', outputDir, 'src/main/java/jni/Tools.java', 'src/main/java/jni/DnodeAttributes.java', 'src/main/java/jni/LibraryLoader.java'
}

compileJava {
  // options.compilerArgs += ["-h", file("src/main/include")]
  finalizedBy generateJniHeaders
}

task compileJNI {
  dependsOn compileJava

  doLast {
    exec {
      commandLine 'sh', '-c', 'mkdir -p build/natives && cd build/natives && cmake ../.. && make'
    }
  }
}

clean.doFirst {
  delete fileTree('src/main/include') {
    include 'jni_*.h'
  }
}

processResources {
  dependsOn compileJNI
}

tasks.withType(Test) {
  systemProperty "java.library.path", "build/natives/lib"
  testLogging.showStandardStreams = false
}

publishing {

  publications {
      maven(MavenPublication) {
          groupId = 'com.mlec.libzfs'
          artifactId = 'library'
          version = '1.0'

          from components.java
      }
  }
}